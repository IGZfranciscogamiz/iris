{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Iris","google":"","tagline":"Client-side optimization techniques for easily building fast and scalable web applications","body":"## About Iris\r\nIris is not only another framework. It is a methodology that will help you to build structured and organized Web applications:\r\n\r\n* Simple, minimalist and easy to use\r\n* Designed to create complex and big applications\r\n* Crossbrowser: Chrome, Firefox e Internet Explorer\r\n* Light and fast: 7 KB\r\n* Open source: New BSD License\r\n\r\n\r\nConventions used in this guide:\r\n* `$var` is a variable that refers to an JQuery object.\r\n* `$function` is a variable that refers to an JQuery function.\r\n* `self` refers to the instance of the screen or UI component.\r\n\r\n## Links\r\n\r\nAPI: \r\nhttp://intelygenz.github.com/iris/api/v0.4.0/\r\n\r\nProject: \r\nhttps://github.com/intelygenz/iris/\r\n\r\n## Screens\r\n\r\nYour application will consist of a screens set.\r\n\r\nA screen is a _browsable component_ and acts as a container for User Interface elements:\r\n\r\n### Create a screen\r\n\r\n```javascript\r\niris.screen.Add(\r\n      $container\r\n    , \"#example-screen\"\r\n    , \"example-screen.js\"\r\n);\r\n```\r\n\r\n`$container` is the screen container.\r\n\r\n`\"#example-screen\"` is the URL Hash through which you can access to the screen.\r\n\r\n`\"example-screen.js\"` is the JS file that is responsible for controlling all the screen functionality.\r\n\r\n### Controller\r\n\r\nBasic screen controller example (_\"example-screen.js\"_):\r\n\r\n```javascript\r\niris.Screen(\r\n\tfunction (self) {\r\n\t\tself.Create = function () {\r\n\t\t\tconsole.log(\"Create\");\r\n\t\t\tself.Template(\"example-screen.html\");\r\n\t\t}\r\n\t\t\r\n\t\tself.Awake = function () {\r\n\t\t\tconsole.log(\"Awake\");\r\n\t\t}\r\n\t\t\r\n\t\tself.Sleep = function () {\r\n\t\t\tconsole.log(\"Sleep\");\r\n\t\t}\r\n\t}\r\n);\r\n```\r\n\r\n`self.Template()` indicates which is the HTML file that uses the screen as template.\r\n\r\n### Template\r\n\r\nBasic screen template example (_\"example-screen.html\"_):\r\n\r\n```html\r\n<div>\r\n\t<h1>Hello world!</h1>\r\n</div>\r\n```\r\n\r\n### Life cycle\r\n`self.Create()` is the screen constructor, only runs once at the component creation phase.\r\n\r\n`self.Sleep()` and `self.Awake()` are automatically invoked when navigating to a screen and when you leave it.\r\n\r\n### Navigation\r\n\r\nNavigation is done without page refresh:\r\n\r\n```javascript\r\niris.Goto(\"#example-screen\");\r\n```\r\n\r\n## UI Component\r\nThey are **reusable** elements that make up the user interface.\r\n\r\n\r\n### Creation\r\n\r\nYou can create UI components inside screens and within themselves:\r\n\r\n```javascript\r\nvar settings = {name: \"Jonh Doe\"};\r\nvar example = self.InstanceUI(\"container\", \"example-ui.js\", settings);\r\n```\r\n\r\n`\"container\"` is the JQuery object to be added or replace by the component.\r\n\r\n`\"example.js\"` is the JS file that is responsible for controlling all the component functionality.\r\n\r\n`settings` is an object with settings that will receive the component.\r\n\r\n### Container\r\n\r\nAll UI components are added or replaced to the container specified in `self.InstanceUI()`:\r\n\r\n```html\r\n<div>\r\n\t<div data-id='container' data-name='Jonh Doe'></div>\r\n</div>\r\n```\r\n\r\nThese containers are referenced by the `data-id` attribute.\r\n\r\nYou can access to the data-* attributes values using `self.Setting()`\r\n\r\n### Controller\r\n\r\nBasic component UI controller example (_\"example-ui.js\"_):\r\n\r\n```javascript\r\niris.UI(\r\n\tfunction (self) {\r\n\t\tself.Create = function () {\r\n\t\t\tconsole.log(\"Create\");\r\n\t\t\tself.Template(\"example-ui.html\");\r\n\t\t\tself.$Get(\"button\").mousedown(_Greet);\r\n\t\t}\r\n\r\n\t\tfunction _Greet () {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"Hi \" + self.Setting(\"name\") + \"!\"\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tself.Awake = function () {\r\n\t\t\tconsole.log(\"Awake\");\r\n\t\t}\r\n\t\t\r\n\t\tself.Sleep = function () {\r\n\t\t\tconsole.log(\"Sleep\");\r\n\t\t}\r\n\t}\r\n);\r\n```\r\n`self.Template()` indicates which is the HTML file that uses the component as template.\r\n\r\n`self.$Get()` JQuery elements can be selected through the attribute `data-id`\r\n\r\n`self.Setting()` you can access the setting parameter that you want.\r\n\r\n\r\n### Template\r\nBasic component UI template example (_\"example-ui.html\"_):\r\n\r\n```html\r\n<button data-id='button'>Greet!</button>\r\n```\r\n\r\n### Life cycle\r\n`self.Create()` is the screen constructor, only runs once at the component creation phase.\r\n\r\n`self.Sleep()` and `self.Awake()` are automatically invoked when navigating to a screen and when you leave it.\r\n\r\n\r\n## Events\r\n\r\nIris lets you create your own events totally detached from the GUI objects.\r\n\r\n### Add an event handler\r\n\r\n```javascript\r\niris.event.Subscribe(\"example_event\", _Listener);\r\n```\r\n`_Listener` is the function to be executed when `\"example_event\"` is triggered.\r\n\r\n### Remove an event handler\r\n\r\n```javascript\r\niris.event.Remove(\"example_event\", _Listener);\r\n```\r\n\r\n`_Listener` will no longer be executed when `\"example_event\"` is triggered.\r\n\r\n\r\n### Trigger an event\r\n\r\n```javascript\r\nvar eventParams = {number : 123};\r\n\r\niris.event.Notify(\r\n    \"example_event\"\r\n  , eventParams\r\n);\r\n```\r\n\r\nTriggers an `\"example_event\"` event and all listeners receive `eventParams` as parameter:\r\n\r\n```javascript\r\nfunction _Listener (eventParams) {\r\n    console.log(\"The number is \" + eventParams.number)\r\n}\r\n```\r\n\r\n## Multilanguage\r\n\r\n### Load the translation texts\r\n\r\n```javascript\r\niris.lang.Load(\"es-ES\", {\"GREETING\":\"¡Hola!\"});\r\n\r\niris.lang.Load(\"en-US\", {\"GREETING\":\"Hi!\"});\r\n\r\niris.lang.LoadFrom(\r\n      \"fr-FR\"\r\n    , \"http://example.com/lang-fr-fr.json\"\r\n);\r\n```\r\n\r\n### Translation text\r\n\r\n```javascript\r\n// set default locale\r\niris.lang.Locale(\"es-ES\"); \r\n\r\niris.lang.Get(\"GREETING\"); // return \"¡Hola!\"\r\n\r\n\r\n// specified locale\r\niris.lang.Get(\"GREETING\", \"en-US\"); // return \"Hi!\"\r\n```\r\n\r\n### Template translations\r\n\r\nIs performed automatically using the `@@` notation:\r\n\r\n```html\r\n<div>\r\n    <p>@@GRETTING@@</p>\r\n</div>\r\n```\r\n\r\n\r\n## Configuration settings\r\n\r\nIf you wish to declare global or environment settings use the _`iris.config.*`_ package.\r\n\r\n### Load configuration settings\r\n\r\n```javascript\r\niris.config.Load({\r\n    \"environment-default\" : \"pro\"\r\n   ,\"environment\": {\r\n        \"localhost\" : \"dev\"\r\n       ,\"www.example.com\" : \"pro\"\r\n   }\r\n   ,\"global\": {\r\n\t\"global-variable\" : \"example\"\r\n}\r\n   ,\"local\": {\r\n\t   \"local-variable\" : {\r\n\t\t \t \"dev\" : \"local-dev\"\r\n\t\t\t,\"pro\" : \"local-pro\"\r\n\t\t}\r\n   }\r\n});\r\n```\r\n\r\n### Global values\r\n```javascript\r\n// add/override a global value\r\niris.global.Load({\"global-variable\" : \"value\"});\r\n\r\n// return \"value\"\r\niris.global.Data(\"global-variable\");\r\n```\r\n\r\n### Establishing the current environment\r\n\r\nThe environment depends of the page URL.\r\n\r\nFor example, if the URL is: `http://localhost:8080/` the environment will be `\"dev\"`.\r\n* `http://localhost:8080/` -> `\"dev\"`\r\n* `http://www.example.com/` -> `\"pro\"`\r\n* `http://www.other.com/` -> `\"pro\"`\r\n\r\nYou can also set manually the environment:\r\n\r\n```javascript\r\n// return current environment\r\niris.config.Env();\r\n\r\n// set environment\r\niris.config.Env(\"pro\");\r\n```\r\n\r\n### Environment values\r\n\r\n```javascript\r\n// add/override a environment variable\r\niris.local.Load({\r\n    \"local-variable\" : {\r\n\t \"dev\" : \"example-dev\"\r\n\t,\"pro\" : \"example-pro\"\r\n    }\r\n});\r\n  \r\n// If environment=\"dev\" then return \"example-dev\"\r\niris.local.Data(\"local-variable\");\r\n```\r\n\r\n## Installation\r\n\r\nDownload the lastest version from https://github.com/intelygenz/iris/zipball/master\r\n\r\n```html\r\n<script type='text/javascript' src=\"iris-0.4.0.js\"></script>\r\n```\r\n\r\nIris requires *JQuery 1.5+*:\r\nhttp://jquery.com/"}