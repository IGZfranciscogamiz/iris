Copyright (c) 2012 Intelygenz <www.intelygenz.com> - All rights reserved.
 
 New BSD License
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 1. Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
 3. Neither the name of copyright holders nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.
 
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL COPYRIGHT HOLDERS OR CONTRIBUTORS
 BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.
 
 Creation date: 2012-01-12
 
 [version] date -> authors
 		upd|fix|new|dep|rmv - description

 [0.4.5] 2012-11-03 david.garcia@intelygenz.com, angel.sanchez@intelygenz.com
 		[fix] Prevent multiple calls to hashchange event handler when welcome screen calls to iris.Goto() on create phase
		[upd] Code refactoring to suppress JS validation warnings. All JSHint validations whitout strict mode are passed. (http://www.jshint.com/)
		[fix] DateFormat bug with month names (https://github.com/intelygenz/iris/issues/22)
		[new] iris.net.CacheVersion (https://github.com/intelygenz/iris/issues/23) 
		[upd] self.$Get() selectors cache: improved performance & permit nested UIs

 [0.4.4] 2012-09-27
 		[new] Screen error messages when template is not set (https://github.com/intelygenz/iris/issues/19)
 		[new] Prepend UI (https://github.com/intelygenz/iris/issues/21)
 		[rmv] Remove currency symbol of number regional format
 		[upd] self.Settings returns complete __Settings__ if don't use any parameter
 		[fix] Fix asynchronous load components on Firefox when hashchange event is triggered
 		[fix] Screen parameter bugs (https://github.com/intelygenz/iris/issues/9)

 [0.4.3] 2012-09-06 -> angel.sanchez@intelygenz.com
 		[fix] Screen Context Bug (https://github.com/intelygenz/iris/issues/10)
 		[fix] Load Multiple Locales Bug (https://github.com/intelygenz/iris/issues/15)
 		[new] Nested properties value in Templates (https://github.com/intelygenz/iris/issues/8)
 		[upd] More Descriptive Error Messages (https://github.com/intelygenz/iris/issues/12)
 		[new] Specify new Regional configuration (https://github.com/intelygenz/iris/issues/17)
 		[doc] Add Screen Paramaters Example (https://github.com/intelygenz/iris/issues/11)

 [0.4.2] 2012-09-04 -> alejandro.gonzalez@intelygenz.com, angel.sanchez@intelygenz.com
		[upd] _LocaleParse -> Now can finds variables with dot notation, eg: @@COMMON.HELLO@@. This mean that you can have nested objects in lang json files.
		[new] iris.AddOn, iris.ApplyAddOn -> Now you can define groups of UIs and extends a UI functionality
		[new] screen.CanSleep -> All screens can define a CanSleep public method that returns a boolean indicating when the screen can be leaved or not.
                               If only one screen can't sleep, sleep action is cancelled.
 		[upd] iris.InstanceUI -> Now displays in console when data-id is not unique.
 		[new] self.DestroyUI() -> Remove a UI from the DOM tree and all its references.
		[new] self.DestroyAllUIs() -> Remove all UIs from a container.
 		[new] self.Destroy() -> new Lifecycle function is called when a UI is destroyed.
 		[new] self.$Get() -> shows error message when element isn't found
 		[new] iris.screen.Destroy() -> Remove a created screen completely
 		[rmv] iris.screen.Add() -> Now you can use self.AddScreen()
 		[new] _AbstractScreen.AddScreen() -> Screens only can be registered inside of screens
 		[new] iris.screen.WelcomeScreen() -> Now the applications must implement this entry point
 		[rmv] The last parameter of self.InstanceUI(p_id,p_js,p_settings,p_$tmpl) -> you can't instance UI outside its own templates
 		[rmv] The last parameter of self.$Get(p_id,p_$tmpl) -> you can't get elements outside its own templates
 		[fix] Small code refactoring and fixed bugs.
 		[new] Tested with JQuery 1.8
 		[doc] Documentation completed.

 [0.4.0] 2012-07-18 -> angel.sanchez@intelygenz.com, alejandro.gonzalez@intelygenz.com
 		Previous project: http://code.google.com/p/iris-js/
 		WARNING: No backward with previous versions